}
z <- 10
f(3)
y <- if(x<3){
NA
} else {
10
}
x <- 5
y <- if(x<3){
NA
} else {
10
}
f(x)
y
x <- 5
f <- function(x){
g <- function(y){
y+z
}
z< -4
x+g(x)
}
y
cube <- function(x,n){x^3}
cube(3)
f <- function(x){
g <- function(y){
y+z
}
z <- 4
x +g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3){
NA
}else{
10
}
y
makeVector <- function(x = numeric()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean)m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
v1 <- c(1:10)
v1
vic <- makeVector(v1)
vic
cachemean(vic)
cachemean(vic)
m <- mean(vic)
m <- cachemean(vic)
cachemean(vic)
c1 <- 1:10
c11 <- makeVector(c1)
c11$get
c11$get()
c11$getmean()
cachemean(c11)
cachemean <- function(x,...){
m <- x$getmean()
if(!its.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data,...)
x$setmean(m)
m
}
cachemean(c11)
cachemean <- function(x,...){
m <- x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data,...)
x$setmean(m)
m
}
cachemean(c11)
x
m
c2 <- 1.5
c22 <- makeVector(c2)
c22$getmean()
c22$get
c22$get()
cachemean(c22)
c2 <- 1:5
c2
c22 <- makeVector(c2)
c22
c22$get()
c22$getmean()
cachemean(C22)
cachemean(c22)
v1 <- c(1:10)
v1
v1c <- makeVector(v1)
v1c
cachemean(v1c)
v1 <- c(1:10)
v1c <- makeVector(v1)
makeVector <- function(x = numeric()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean)m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x,...){
m <- x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data,...)
x$setmean(m)
m
}
makeVector(V1)
v1c <- makeVector(v1)
v1c
cachemean(v1c)
makeVector <- function(x = numeric()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean)m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x,...){
m <- x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data,...)
x$setmean(m)
m
}
v1 <- c(1:10)
v1
v1c <- makeVector(v1)
v1c
cachemean(v1c)
m
v1c$getmean()
v2 <- c(3,4,5)
v2
v2c <- makeVector(v2)
v2c
cachemean(v2c)
cachemean(v2c)
cachemean(v1c)
demo()
demo(scoping)
makeCacheMatrix <- function(x = matrix()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setsolve <- function(solve) m <<- solve
getsolve <- function() m
list(set = set, get = get,
setsolve = setsolve,
getsolve = getsolve)
}
cacheSolve <- function(x=matrix(),...){
m <- x$getsolve()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data,...) %*% x
x$setsolve(m)
m
}
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2))
cachesolve(a)
cacheSolve(a)
cacheSolve <- function(x=matrix(),...){
m <- x$getsolve()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data,...)
x$setsolve(m)
m
}
cacheSolve(a)
a
matrix(1:4,2,2)
cacheSolve(a)
mat <- matrix(1:4,2,2)
mat
solve(mat) %*% mat
mat2 <- cacheSolve(a)
mat2
mat %*% mat2
library(dataets)
library(datasets)
debug(ls)
ls
n
data(mtcars)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
exi
exit
quit
quit
exit
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeigt)
xyplot(weight ~ Time | Diet, BodyWeight)
summary(nlme)
str(nlme)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor (Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
install.packages("mgcv")
install.packages("mgcv")
library(ggplot2)
library(mgcv)
qplot(votes, rating, data = movies) + geom_smooth
qplot(votes, rating, data = movies) + geom_smooth()
getwd()
fileURL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
temp<-tempfile()
download.file(fileURL,temp)
classes<-c("character","character","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
dataAll<-read.table(unz(temp,"household_power_consumption.txt"),header=T,sep=";",
colClasses=classes,na.strings="?")
unlink(temp)
chooseDate<-c("1/2/2007","2/2/2007")
data2<-dataAll[dataAll$Date %in% chooseDate,]
data2$datetime<-as.POSIXct(paste(data2$Date,data2$Time),format="%d/%m/%Y %H:%M:%S")
class(data2$datetime)
par(mfrow=c(1,1))
tick1<-as.POSIXct("1/2/2007 00:00:00",format="%d/%m/%Y %H:%M:%S")
tick2<-as.POSIXct("2/2/2007 00:00:00",format="%d/%m/%Y %H:%M:%S")
tick3<-as.POSIXct("3/2/2007 00:00:00",format="%d/%m/%Y %H:%M:%S")
with(data2,plot(datetime, Global_active_power,type="l",
ylab="Global Active Power (kilowatts)",
xlim=c(tick1,tick3),xlab=""
))
par(mfrow=c(1,1))
attach(data2)
upperlim<-max(max(Sub_metering_1),max(Sub_metering_2),max(Sub_metering_3))
lowerlim<-min(min(Sub_metering_1),min(Sub_metering_2),min(Sub_metering_3))
detach(data2)
with(data2, plot(datetime, Sub_metering_1, type="l",col="black",
ylab="Energy sub metering" ,
ylim=c(lowerlim,upperlim), xlim=c(tick1, tick3), xlab=""
))
lines(x=data2$datetime, y=data2$Sub_metering_2,col="red")
lines(x=data2$datetime, y=data2$Sub_metering_3,col="blue")
legend("topright", lty=1, col=c("black","red","blue"),
legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
cex=1)
library(lubridate)
install.packages("lubridate")
library(lubridate)
min_between_dates <- function(day_from, day_to, min_from = "00:00:00", min_to = "00:00:00" ) {
day_start <- dmy_hms(paste0(day_from, min_from))
day_end <- dmy_hms(paste0(day_to, min_to))
abs(difftime(day_start, day_end, units = "min"))
}
getwd()
ds_start <- read.table("household_power_consumption.txt", header = TRUE,
sep = ";", nrow = 1, colClasses = "character")
rows_skip <- min_between_dates(ds_start$Date[1], "01/02/2007", ds_start$Time[1]) + 1
rows_read <- min_between_dates("01/02/2007", "03/02/2007")
ds <- read.table("household_power_consumption.txt", header = FALSE,
sep = ";", col.names = names(ds_start), colClasses = "character",
skip = rows_skip, nrow = rows_read)
ds[, 3:9] <- lapply(ds[, 3:9], as.numeric)
datetime <- dmy_hms(paste0(ds$Date, " ", ds$Time))
ds <- cbind(ds, datetime)
hist(ds$Global_active_power,
col = "red",
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power"
)
plot(ds$Global_active_power ~ ds$datetime,
type = "n",
xlab = "",
ylab = "Global Actibe Power (kilowatts)"
)
lines(ds$Global_active_power ~ ds$datetime)
plot(ds$Sub_metering_1 ~ ds$datetime,
type = "n",
xlab = "",
ylab = "Energy sub metering"
)
lines(ds$Sub_metering_1 ~ ds$datetime, col = "black")
lines(ds$Sub_metering_2 ~ ds$datetime, col = "red")
lines(ds$Sub_metering_3 ~ ds$datetime, col = "blue")
legend("topright", col = c("black", "red", "blue"), lty = "solid",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
setwd("C:/Users/Usuario/RepReasProj1")
data <- read.csv("activity.csv",header = TRUE)
library(doBy)
library(dplyr)
tabla <- summaryBy(steps ~ date, data = data, FUN = list(sum),na.rm=TRUE)
head(tabla)
sumas <- sum(tabla$steps.sum)
hist(tabla$steps.sum)
hist(tabla$date)
hist(tabla)
hist(tabla$steps.sum~tabla$date)
hist(date$steps)
hist(data$steps)
hist(tabla$steps.sum)
plot(tabla$steps.sum)
plot(tabla$steps.sum~tabla$date)
bplot(tabla$steps.sum~tabla$date)
barplot(tabla$steps.sum~tabla$date)
barplot(tabla$steps.sum)
hist(tabla$steps.sum)
tabla2 <- summaryBy(steps ~ date, data = data, FUN = list(mean,median),na.rm=TRUE)
print(tabla2)
plot(tabla2$steps.mean~tabla2$date,type="l",xlab="date",ylab="steps mean")
plot(tabla2$steps.median~tabla2$date,type="l",xlab="date",ylab="steps median")
intervalos <- summaryBy(steps ~ interval, data = data, FUN = list(mean,max),na.rm=TRUE)
plot(intervalos$steps.mean~intervalos$interval,type="l",xlab="intervals",ylab="steps mean")
sel_intervalos <- subset(intervalos, intervalos$steps.max == maxsteps)
sel_intervalos <- subset(intervalos, intervalos$steps.max == max.steps)
head(intervalos)
maxsteps <- max(intervalos$steps.max)
sel_intervalos <- subset(intervalos, intervalos$steps.max == maxsteps)
print(sel_intervalos)
print(sel_intervalos$interval)
length(which(is.na(data$steps)))
select_nas <- subset(data, is.na(data$steps))
head(select_nas)
unique(select_mas$steps)
unique(select_nas$steps)
fechas_nas <- unique(select_nas$date)
length(fechas_nas)
print(fechas_nas)
unique(select_nas$date)
select_no_nas <- na.omit(data)
head(select_no_nas)
unique(select_no_nas$steps)
reemplazo <- data.frame(select_nas,intervalos$steps.mean)
head(reemplazo)
names(reemplazo) <- c("setps0","date","interval","steps")
head(reemplazo)
reemplazo <- select(reemplazo,steps,date,interval)
head(reemplazo)
data2 <- rbind(select_no_nas,reemplazo)
data2 <- arrange(data2,date,interval)
head(data2)
tail(data2)
sumas2 <- sum(data2$steps.sum)
sumas2
tabla3 <- summaryBy(steps ~ date, data = data2, FUN = list(sum))
head(tabla3)
sum(tabla3$steps.sum)
hist(tabla3$steps.sum)
tabla4 <- summaryBy(steps ~ date, data = data2, FUN = list(mean,median))
head(tabla4)
plot(tabla4$steps.mean~tabla3$date,type="l",xlab="date",ylab="steps mean")
plot(tabla4$steps.median~tabla3$date,type="l",xlab="date",ylab="steps median")
plot(tabla4$steps.mean~tabla3$date,type="l",xlab="date",ylab="steps mean")
data2$day <- as.POSIXlt(data2$date)$wday
head(data2)
unique(data2$day)
findesemana <- subset(data2, data2$day == 6 | data3$day == 0)
findesemana <- subset(data2, data2$day == 6 | data2$day == 0)
head(findesemana)
unique(findesemana$day)
findesemana$weekday <- c("weekend")
head(findesemana)
entresemana <- subset(data2, data2$day > 0 & data2$day < 6)
head(entresemana)
unique(entresemana$day)
entresemana$weekday <- c("weekday")
head(entresemana)
unique(entresemana$weekday)
data3 <- rbind(entresemana,findesemana)
head(data3)
tail(data3)
data3 <- arrange(data3,date,interval)
head(data3)
tail(data3)
library(lattice)
xyplot(findesemana$steps ~ findesemana$interval)
xyplot(entresemana$steps ~ entresemana$interval)
xyplot(findesemana$steps ~ findesemana$interval)
xyplot(entresemana$steps ~ entresemana$interval)
f <- factor(weekday,labels = c("weekend","weekday"))
f <- factor(data3$weekday,labels = c("weekend","weekday"))
f <- factor(data3$weekday,labels = c("weekend","weekday"))
xyplot(data3$steps ~ data3$interval | factor(weekday,labels))
f <- factor(data3$weekday,labels = c("weekend","weekday"))
xyplot(data3$steps ~ data3$interval | f, layout = c(1,2))
xyplot(data3$steps ~ data3$interval | data3$weekday, layout = c(1,2))
xyplot(findesemana$steps ~ findesemana$interval)
xyplot(entresemana$steps ~ entresemana$interval)
xyplot(data3$steps ~ data3$interval | data3$weekday, layout = c(1,2)
)
hist(tabla$steps.sum,col="green",main="Number of steps",xlab="")
hist(tabla$steps.sum,col="green",main="Number of steps")
xyplot(data3$steps ~ data3$interval | data3$weekday, layout = c(1,2),type="l2")
xyplot(data3$steps ~ data3$interval | data3$weekday, layout = c(1,2),type="l")
xyplot(data3$steps ~ data3$interval | data3$weekday, layout = c(1,2),type="l",xlab="Interval",ylab="Number of Steps")
head(tabla4)
head(data3)
tabla5 <- summaryBy(steps ~ date, data = data3, FUN = list(mean)
)
head(tabla5)
tabla5 <- summaryBy(steps ~ interval, data = data3, FUN = list(mean))
head(tabla5)
tabla5 <- summaryBy(steps ~ interval ~ weekday, data = data3, FUN = list(mean))
?summaryBy
tabla5 <- summaryBy(steps ~ interval, data = data3, FUN = list(mean),full.dimension=TRUE)
head(tabla5)
tabla5 <- summaryBy(steps ~ interval, data = data3, FUN = list(mean))
head(tabla5)
tabla5 <- summaryBy(steps+weekday ~ interval, data = data3, FUN = list(mean),full.dimension=TRUE)
head(tabla5)
tabla5 <- summaryBy(steps ~ interval + weekday, data = data3, FUN = list(mean),full.dimension=TRUE)
head(tabla5)
tabla5 <- summaryBy(steps ~ interval + weekday, data = data3, FUN = list(mean))
head(tabla5)
xyplot(tabla5$steps.mean ~ tabla5$interval | tabla5$weekday, layout = c(1,2),type="l",xlab="Interval",ylab="Number of Steps")
tabla5 <- summaryBy(steps ~ interval + weekday, data = data3, FUN = list(mean))
head(tabla5)
xyplot(tabla5$steps.mean ~ tabla5$interval | tabla5$weekday, layout = c(1,2),type="l",xlab="Interval",ylab="Number of Steps")
library(knitr)
getwd()
?knit2html
knit2html("PA1_template.md")
knit('PA1_template.rmd', 'PA1_template.md')
knit2html('PA1_template.rmd', 'PA1_template.html')
library(markdown)
markdownToHTML('PA1_template.md', 'PA1_template.html')
knit2html("PA1_template.html")
knit2html("PA1_template.rmd","PA1_template.html")
knit('PA1_template.rmd', 'PA1_template.html')
resultados <- summaryBy(tabla2$steps.median ~ tabla2$date, data = tabla2, FUN = list(mean,median),na.rm=TRUE)
resultados
mean(tabla2$steps.mean)
mean(tabla2$steps.mean,na.rm=TRUE)
median(tabla2$steps.mean,na.rm=TRUE)
median(tabla2$steps.median,na.rm=TRUE)
median(tabla$steps.sum)
median(tabla$steps.sum,na.rm=TRUE)
mean(tabla$steps.sum,na.rm=TRUE)
tabla2 <- summaryBy(steps ~ date, data = data2, FUN = list(sum))
mean(tabla2$steps.sum,na.rm=TRUE)
median(tabla2$steps.sum,na.rm=TRUE)
knit("PA1_template.Rmd","PA1_template.md")
knit2html("PA1_template.Rmd","PA1_template.html")
knit("PA1_template.Rmd","PA1_template.html")
markdownToHTML('PA1_template.md', 'PA1_template.html')
knit2html('PA1_template.md', 'PA1_template.html')
knit2html('PA1_template.Rmd', 'PA1_template.html')
knit("PA1_template.Rmd","PA1_template.md")
markdownToHTML('PA1_template.md', 'PA1_template.html'
)
